---
- name: Install Docker Engine on Ubuntu (Latest Version)
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Verify Ubuntu OS
      fail:
        msg: "This playbook is designed for Ubuntu systems only. Detected: {{ ansible_distribution }}"
      when: ansible_distribution != "Ubuntu"

    # Remove old Docker packages
    - name: Remove old Docker packages
      apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - docker-compose-v2
          - podman-docker
          - containerd
          - runc
        state: absent
        purge: yes
      ignore_errors: yes

    - name: Remove old Docker data (if clean installation requested)
      file:
        path: /var/lib/docker
        state: absent
      when: clean_install == "yes"

    # Set up Docker's apt repository
    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Install packages to allow apt to use repository over HTTPS
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create directory for apt keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        chmod a+r /etc/apt/keyrings/docker.asc

    - name: Add Docker repository to apt sources
      shell: |
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
        tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt package index after adding Docker repository
      apt:
        update_cache: yes

    # Install latest Docker Engine
    - name: Install latest Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    # Post-installation steps
    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add specified user to docker group
      user:
        name: "{{ docker_user }}"
        groups: docker
        append: yes
      when: docker_user is defined and docker_user != ""

    - name: Display completion message
      debug:
        msg: |
          üê≥ Docker Installation Complete!
          Version: Latest
          User added to docker group: {{ docker_user | default('None') }}
          ‚ö†Ô∏è  Important: {{ docker_user | default('User') }} must log out and log back in for docker group membership to take effect!