---
- name: Install Vanilla Kubernetes (kubectl + minikube) - Simple Root Version
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Display current user information
      debug:
        msg: |
          Running as: {{ ansible_user }}
          UID: {{ ansible_user_uid }}
          This is a simplified root installation approach.

    - name: Verify Docker is installed and running
      shell: docker --version
      register: docker_version
      failed_when: docker_version.rc != 0

    - name: Display Docker status
      debug:
        msg: "âœ… Docker is running: {{ docker_version.stdout }}"

    # Install kubectl (exact commands from your documentation)
    - name: Download latest stable kubectl
      shell: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      args:
        chdir: /tmp

    - name: Make kubectl executable
      shell: chmod +x /tmp/kubectl

    - name: Move kubectl to system PATH
      shell: mv /tmp/kubectl /usr/local/bin/

    - name: Verify kubectl installation
      shell: kubectl version --client
      register: kubectl_version
      changed_when: false

    # Install minikube (exact commands from your documentation)
    - name: Download latest minikube
      shell: curl -Lo /tmp/minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

    - name: Make minikube executable
      shell: chmod +x /tmp/minikube

    - name: Move minikube to system PATH
      shell: mv /tmp/minikube /usr/local/bin/

    - name: Verify minikube installation
      shell: minikube version
      register: minikube_version
      changed_when: false

    # Create a non-root user for minikube if needed
    - name: Create minikube user if it doesn't exist
      user:
        name: minikube
        shell: /bin/bash
        home: /home/minikube
        create_home: yes
        groups: docker
        append: yes
      when: create_minikube_user == "yes"

    - name: Add minikube user to docker group
      user:
        name: minikube
        groups: docker
        append: yes
      when: create_minikube_user == "yes"

    # Option 1: Install Kind instead of minikube (more reliable for root)
    - name: Download Kind (Kubernetes in Docker) as alternative
      shell: |
        curl -Lo /tmp/kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x /tmp/kind
        mv /tmp/kind /usr/local/bin/kind
      when: use_kind == "yes"

    - name: Create Kind cluster
      shell: kind create cluster --name minikube
      when: use_kind == "yes" and start_cluster == "yes"
      register: kind_result
      failed_when: false

    # Option 2: Try minikube with different approach
    - name: Clean up any existing minikube installation
      shell: |
        minikube delete --all || true
        rm -rf /root/.minikube || true
        rm -rf /home/minikube/.minikube || true
      when: use_kind != "yes"

    - name: Set proper permissions for temp directory
      shell: |
        chmod 1777 /tmp
        sysctl fs.protected_regular=0 || true
      when: use_kind != "yes"

    - name: Start minikube as minikube user (if user created)
      shell: |
        su - minikube -c "minikube start --driver=docker"
      timeout: 600
      when: use_kind != "yes" and create_minikube_user == "yes" and start_cluster == "yes"
      register: minikube_user_result
      failed_when: false

    - name: Start minikube as root with none driver (last resort)
      shell: |
        export MINIKUBE_IN_STYLE=false
        export CHANGE_MINIKUBE_NONE_USER=true
        minikube start --driver=none --force
      timeout: 600
      when: use_kind != "yes" and create_minikube_user != "yes" and start_cluster == "yes"
      register: minikube_root_result
      failed_when: false

    # Copy kubectl config if using minikube user
    - name: Copy kubectl config to root
      copy:
        src: /home/minikube/.kube/config
        dest: /root/.kube/config
        remote_src: yes
      when: create_minikube_user == "yes" and minikube_user_result is defined and minikube_user_result.rc == 0
      failed_when: false

    # Verification
    - name: Test kubectl access
      shell: kubectl get nodes
      register: kubectl_test
      failed_when: false

    - name: Test cluster info
      shell: kubectl cluster-info
      register: cluster_info_test
      failed_when: false